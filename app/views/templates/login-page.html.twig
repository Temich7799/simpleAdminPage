{% extends 'base.html.twig' %}

{% block body %}

<body>
    <main>
        <h1>Welcome!</h1>
        <form class="form" id="form-login" name="login">
            <label>Username</label>
            <input name="username" required />
            <label>Password</label>
            <input name="password" type="password" required />
            <div>
                <button name="sign-in" type="submit">Sign In</button>
                <button name="sign-up" id="sign-up">Sign Up</button>
            </div>
            <a href="reset-password">Reset password</a>
        </form>
    </main>
    <script>
        const form = document.getElementById('form-login');
        const signUpButton = document.getElementById('sign-up');

        form.addEventListener('submit', (submitEvent) => {

            submitEvent.preventDefault();

            const formData = new FormData(form);

            fetch('sign-in', {
                    method: 'POST',
                    mode: 'cors',
                    body: formData
                })
                .then((response) => response.json())
                .then((data) => {
                    if (data.status === true) document.location.href = '.';
                    if (data.status === false) displayMessage(data.content);
                })
                .catch((error) => {
                    error && displayMessage('An error has occurred. Please, try again');
                });

            function displayMessage(message) {

                const errorMessage = document.createElement('p');
                errorMessage.append(message);
                form.append(errorMessage);

                form.addEventListener('click', formOnClickHandler);

                function formOnClickHandler(clickEvent) {

                    const inputElement = clickEvent.target.closest('input');

                    inputElement.addEventListener('input', onInputHandler);

                    form.removeEventListener('click', formOnClickHandler);

                    function onInputHandler() {
                        form.removeChild(errorMessage);
                        inputElement.removeEventListener('input', onInputHandler);
                    }
                }
            }
        });

        signUpButton.addEventListener('click', (clickEvent) => {
            clickEvent.preventDefault();
            document.location.href += 'sign-up';
        });
    </script>
</body>
{% endblock %}